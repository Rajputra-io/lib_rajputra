use core::num;
mod array_math;

use array_math::{sub_array25, sqr_array25, sum_elm_array};

use rayon::prelude::*;
use std::sync::Mutex;

fn collect_distances(targets: &Vec<[f64; 26]>, sources: &Vec<[f64; 26]>) -> Vec<[f64; 3]> {
    let distances: Mutex<Vec<[f64; 3]>> = Mutex::new(vec![]);

    sources.par_iter().for_each(|&source| {
        targets.par_iter().for_each(|&target| {
            let distance = estimate_distance(&target, &source);
            distances.lock().unwrap().push(distance);
            //println!("{:?}", distance);
        });
    });

    distances.into_inner().unwrap()
}

fn estimate_distance(target: &[f64; 26], source: &[f64; 26]) -> [f64; 3] {
    let sub_arr = sub_array25(&target, &source);
    //println!("sub_arr: {:?}", sub_arr);
    let sqr_arr = sqr_array25(&sub_arr);
    //println!("sqr_arr: {:?}", sub_arr);
    let sum: f64 = sum_elm_array(&sqr_arr);
    //println!("sum: {:?}", sum);

    let distance = sum.sqrt();

    [source[0].clone(), target[0].clone(), distance]
}

fn main() {
    let sources: Vec<[f64; 26]> = vec![
        [0.0,0.0915136,0.024779,-0.0383908,0.0457368,-0.0484396,0.0278332,0.005593,0.0009232,-0.0287558,-0.0259868,-0.0084444,-0.0016782,2.98e-05,-0.0138446,0.016585,0.0099178,-0.0075622,0.0001522,0.0026398,-0.0077038,-0.006688,-0.0037836,0.0021446,0.0018074,0.002419],
        [1.0,0.0912862,0.0276224,-0.0463104,0.0528428,-0.0513942,0.0257694,0.003713,-0.0041078,-0.0273652,-0.0253672,-0.0083144,-0.0008392,-0.0011894,-0.0116978,0.0122962,0.0141606,-0.0022686,0.0012668,0.0014078,-0.006128,-0.0095082,-0.000272,-0.000715,0.0008192,0.0029218],
        [2.0,0.1000017,0.0451186,-0.0255366,0.0428667,-0.0437004,0.0255384,0.005405,-0.0021099,-0.0304156,-0.0293137,-0.008537,-0.0009206,-0.0017627,-0.012504,0.01712,0.0131074,-0.0043584,-0.0017194,0.0012391,-0.0091651,-0.0086277,-0.0020669,0.0017783,0.0007229,0.0005986],
        [3.0,0.0867438,-0.0040149,-0.0365982,0.0470528,-0.0494403,0.0284987,0.0041918,-0.0007083,-0.0241766,-0.0228347,-0.0105704,-0.0001115,-0.0011547,-0.0138391,0.0143612,0.0120256,-0.0018163,0.0005451,0.0014177,-0.0073204,-0.0053974,-0.002844,0.0011895,-0.0001093,0.0013283],
        [4.0,0.0891071,0.0020311,-0.0374426,0.0493729,-0.050471,0.0281681,0.0060429,0.0033954,-0.0241337,-0.0263981,-0.0086299,-0.0020981,-0.0008496,-0.0109703,0.0184773,0.0098306,-0.0085309,0.001122,0.0015623,-0.00904,-0.008984,-0.0013954,0.0041201,-0.0009469,0.0034384],
        [5.0,0.0959908,0.0380823,-0.0306725,0.0449508,-0.048214,0.024589,0.0012925,-0.0035383,-0.0275083,-0.0287325,-0.0048987,-0.0010242,0.0009165,-0.0159185,0.0132102,0.0152477,-0.0036505,0.0018793,0.0030167,-0.0097338,-0.0044922,-0.0028028,0.0017665,0.0016267,0.0044705],
        [6.0,0.0859094,0.0098169,-0.0443745,0.0531873,-0.0534751,0.0291374,0.0054274,-0.00089,-0.024163,-0.0223369,-0.009867,-0.0012418,-0.000276,-0.0147584,0.0154592,0.011409,-0.0029677,-0.0005249,-0.00088,-0.0065031,-0.0063935,-0.0009186,0.0016316,0.0013714,0.0016708]
    ];

    let source_names: Vec<String> = vec![
        String::from("Pamiri_Badakhshan"),
        String::from("Pamiri_Ishkashim"),
        String::from("Pamiri_Rushan"),
        String::from("Pamiri_Sarikoli"),
        String::from("Pamiri_Sarikoli_China"),
        String::from("Pamiri_Shugnan"),
        String::from("Pamiri_Wakhi")
    ];

    let targets: Vec<[f64; 26]> = vec![
        [0.0, 0.071709,-0.017264,-0.110119,0.079135,-0.078476,0.046296,0.003055,0.003923,-0.001841,0.005649,-0.010393,-0.00045,0.000892,-0.011285,0.010993,0.010607,0.003129,-0.005448,-0.006285,-0.007879,-0.004866,-0.002349,0.004314,0.004217,0.005269],
        [1.0, 0.0386995,-0.0903825,-0.1719675,0.1148275,-0.071244,0.058149,-0.0027025,0.0141915,0.045711,0.0305245,-0.0052775,0.00045,-0.0055,0.0050235,-0.003597,-0.010342,0.0029335,-0.003421,-0.0039595,0.006253,0.0038055,-0.0029675,0.001602,0.002289,-0.0034725],
        [2.0, 0.0973188,0.1423773,-0.014406,-0.0499358,0.010925,-0.0187694,-0.001974,-0.0017538,0.0098579,0.0188432,0.0039622,-0.0011239,0.0025123,-0.0026699,-0.0050489,0.0030892,0.0022035,-0.0016977,-0.0007794,-0.0011255,-0.0033441,-0.0026957,0.0008751,0.0013857,0.0008143]
    ];

    let target_names: Vec<String> = vec![
        String::from("Rajput_AJK"),
        String::from("Telugu_Yadava"),
        String::from("Ashkenazi_Germany")
    ];

    let distances = collect_distances(&targets, &sources);

    println!("Distances: {:?}", distances);
}


